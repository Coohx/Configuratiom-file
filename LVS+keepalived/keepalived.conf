########## Gloable Setting ##############
global_defs {
   notification_email {
	 # 发生切换时发送邮件
     huangxin2028@gamil.com
   }
   notification_email_from huangxin202823@163.com
   smtp_server smtp.163.com 
   smtp_connect_timeout 3
   router_id LVS_DEVEL
}

############## VRRP 实例#########################
vrrp_instance VI_1 {
    # master路由
    state MASTER
    # VIP绑定在 eth0上
    interface eth0
    # VRID，标识一组物理路由(DR)，两个DR同属一个VRRP组
    virtual_router_id 88
    # 优先级，高优先级会抢占master(默认抢占模式)
    priority 100
    # 所有成员间隔1s检查一次VRRP的状态，所有成员必须一致	
    advert_int 1
	# 成员之间认证方式
    authentication {
        auth_type PASS
		#认证字符串（使用 openssl rand -hex 6生成随机字符串）
        auth_pass 1111
    }
	# 设置VIP
    virtual_ipaddress {
        192.168.8.100/32 dev eth0 label eth0:0
    }
	# web服务器全部失败，可以指定Sorry web
    sorry_server 192.168.8.8
}


############## 虚拟服务器配置段######################
virtual_server 192.168.8.100 80 {
 	# 每隔6秒查询realserver状态,检查RS是否宕掉
    delay_loop 6
    # LVS 算法 支持的算法：rr|wrr|lc|wlc|lblc|sh|dh
	lb_algo rr
    # LVS DR模式
	lb_kind DR
    # 会话保持时间，单位秒可以适当延长时间以保持session
	persistence_timeout 0
	# 转发协议类型，有TCP和UDP两种,同时检查rs状态
    protocol TCP

    real_server 192.168.8.101 80 {
        weight 1
#		TCP_CHECK {
#			connect_timeout 10
#			nb_get_retry 3
#			delay_before_retry 3
#		}		
			# 后端RS服务器的检查{HTTP_GET | SSL_GET}
   		HTTP_GET {
            url {
     		    	path /
					status_code 200
       	        }
                connect_timeout 3
                nb_get_retry 3
                delay_before_retry3
           }
    }
	
	real_server 192.168.8.102 80 {
        weight 1
		# 通过TCP_CHECK判断RealServer的健康状况
        TCP_CHECK {
           	# 10秒无响应超时 
           	connect_timeout 10
          	# 重连次数  
			nb_get_retry 3
           	# 重连间隔时间
			delay_before_retry 3
           	connec_port 80
        }
    }
}
